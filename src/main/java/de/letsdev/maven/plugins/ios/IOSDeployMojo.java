/**
 * Maven iOS Plugin
 * 
 * User: sbott
 * Date: 19.07.2012
 * Time: 19:54:44
 *
 * This code is copyright (c) 2012 let's dev.
 * URL: http://www.letsdev.de
 * e-Mail: contact@letsdev.de
 */

package de.letsdev.maven.plugins.ios;

import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.MojoFailureException;
import org.apache.maven.project.MavenProject;

import java.util.HashMap;
import java.util.Map;


/**
 * 
 * @author let's dev
 * @goal deploy
 * @execute phase="compile"
 */
public class IOSDeployMojo extends AbstractMojo {
	
	/**
	 * HockeyApp Api Token
	 * @parameter
	 * 		expression="${ios.hockeyAppToken}"
	 */
	private String hockeyAppToken;
			
	/**
	 * TestFlight Release Notes
	 * @parameter
	 * 		expression="${ios.releaseNotes}"
	 * 		default-value="Release generated by maven-ios-plugin"
	 */
	private String releaseNotes;
		
	/**
	 * iOS App name
	 * @parameter
	 * 		expression="${ios.appName}"
	 * @required
	 */
	private String appName;	
	
	/**
	 * iOS Deploy IPA Path
	 * @parameter
	 * 		expression="${ios.deployIpaPath}"
	 */
	private String deployIpaPath;

    /**
     * iOS Deploy Icon Path
     * @parameter
     * 		expression="${ios.deployIconPath}"
     */
    private String deployIconPath;

    /**
     * iOS configuration
     * @parameter
     * 		expression="${ios.configuration}"
     * 		default-value="Release"
     */
    private String configuration;
		
	/**
	* The maven project.
	* 
	* @parameter expression="${project}"
	* @required
	* @readonly
	*/
	protected MavenProject mavenProject;	
	
	/**
	 * 
	 */
	public void execute() throws MojoExecutionException, MojoFailureException {
		try {
			final String targetDir = mavenProject.getBuild().getDirectory();
			final String appDir = mavenProject.getBasedir().getAbsoluteFile() + "/" + targetDir + "/" + configuration + "-iphoneos/";
			
			Map<String, String> properties = new HashMap<String, String>();
			properties.put(Utils.PLUGIN_PROPERTIES.APP_NAME.toString(), appName);
			properties.put(Utils.PLUGIN_PROPERTIES.HOCKEY_APP_TOKEN.toString(), hockeyAppToken);
			properties.put(Utils.PLUGIN_PROPERTIES.RELEASE_NOTES.toString(), releaseNotes);
			properties.put(Utils.PLUGIN_PROPERTIES.APP_DIR.toString(), appDir);
			properties.put(Utils.PLUGIN_PROPERTIES.CONFIGURATION.toString(), configuration);
			properties.put(Utils.PLUGIN_PROPERTIES.DEPLOY_IPA_PATH.toString(), deployIpaPath);
			properties.put(Utils.PLUGIN_PROPERTIES.DEPLOY_ICON_PATH.toString(), deployIpaPath);

			ProjectDeployer.deploy(properties);
		} catch (IOSException e) {
			System.out.println(e.getMessage());
			throw new MojoExecutionException(e.getMessage());
		}
	}

}
